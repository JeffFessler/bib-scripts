#!/usr/bin/perl -w
# do-number-title-author
# finish converting entries having 3 lines each:
# number \n title \n author(s)
# can have optional time and optional abstract
# e.g. ismrm 2017

$cite0 = '@c';
$cite1 = 'ismrm . zzz 2019';
#$cite1 = 'ismrm-mrf . . 2019'; # nline >= 3 below!

$home = $ENV{HOME};
$bib = $home . '/l/src/script/bib/';
require $bib . '/tolower.pl';
require $bib . '/author.pl';
require $bib . '/bibkey.pl';

$/ = ""; # slurp paragraph at time

while (<STDIN>)
{
	if (/^#/) # echo comments
	{
		print "$_\n";
		next;
	}

	@all = split(/\n/);
	$nline = $#all + 1;

	die "bad paragraph ($nline):\n`$_'\n"
#		unless ($nline == 3);
		unless ($nline >= 3);

	# skip time if included
	if ($all[0] =~ m/:/)
	{
		$all[0] = $all[1];
		$all[1] = $all[2];
		$all[2] = $all[3];
	}

	$number = $all[0];
	$title = $all[1];
	$authors = $all[2];
	$rest = $all[3-$#all];

	$number =~ s/\s//g;
	$number =~ s/\.//g;

	$authors = &author($authors);
	$title = &TitleLower($title);

	$fake = "$cite0 xx:xx:xx $cite1\n$authors\n$title\n";
	@bibkey = &bibkey($fake); 
	($author, $year, $code) = @bibkey;
	die "code" unless defined($code);
	$key = "$author:$year:$code";

	$cite = $cite1;
	$cite =~ s/zzz/$number/;

	print "$cite0 $key $cite\n";
	print "$authors\n$title\n";
	print "\@u ismrm 2019 $number\n";
	print "\@an xx\n"; # todo; optional
	print "\@abs $rest";
#	print "\@an $number\n$rest";
#	print "\@an $note\n";
#	print "\@an \n";
	print "\n";
}
